# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OeD4bh8SfVQA079ASr8GHEqO_Qsj6pzG
"""

"""
- Bi Weekly Challenge 2
OBJECTIVE:
- Collect and print user's data
- Check and print user's age category
- Calculate user's age in decades
"""



#input for user name, age and gender, along with error for age abd gender
try:
    name = input('Type in your name: ')
    age = int(input('How old are you: '))
except ValueError:
    print('Age should be a number')
except TypeError:
    print('Argument must be a number')

gender = input('What is your gender "M" or"F": ')


def get_class(age, gen):      # A function that takes age to check user class, and gender
    if age < 1:
        class_group = 'an infant'  
    elif (age >= 1) & (age <= 11):
        class_group = 'a child' 
    elif (age  >= 12) & (age <= 17):
        class_group = 'a teen' 
    elif (age >= 18) &  (age <= 64):
        class_group = 'an adult'
    elif age >= 65:
        class_group = 'an older adult' 
    if gen.upper() == 'M' :
        gender ='Male'
    elif gen.upper() == 'F':
        gender=  'Female'
    else:
        raise TypeError('Gender should either be "M"')
    return (class_group, gender)        # return a list containing both class and gender

user_class = get_class(age, gender)


year = 2021


year_list = []
age_list = []

for i in range(-10, 80, 10):            # Range of numbers from -10 to 80 with an interval of 10 
    future_year = year + i              # For each decade, both in 10 years in the past and 70 years in the future
    year_list.append(future_year)       # The age of the user and the corresponding year is calculated and appended to a list
    future_age = age + i                # A dictionary would be smaller 
    age_list.append(future_age)


age_dict = dict()
for i in range(-10, 80, 10):           
    future_year = year + i   
    future_age = age + i   
    age_dict[future_year] = future_age


# Set of print statements 
print('\nHello ' + name + ' , you are ' + str(age) +  " years old " + user_class[1] +
      ' \nYour year of birth is ' + str(year - age) +
       '\nAs you are ' + str(age) + ' years old, you are ' + user_class[0]  + '.\n'
      )

# Print statement for each year, a decade before, skip the current year and set of decades after
for i in range(len(age_list)):
    if year_list[i] != 2021:
        print('In '  + str(year_list[i]) + ', youâ€™ll be ' + str(age_list[i]) + 'y.o')